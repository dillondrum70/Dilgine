name: MSBuild

on:
  push:
  workflow_dispatch:
    branches: [ "main" ]
        

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: ./Dilgine/Dilgine.sln

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Release

permissions:
  contents: read
  id-token: write
  pages: write

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Restore NuGet packages
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: nuget restore ${{env.SOLUTION_FILE_PATH}}

    - name: Build Windows
      working-directory: ${{env.GITHUB_WORKSPACE}}
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} /p:Platform=x64 ${{env.SOLUTION_FILE_PATH}}
      
    - name: Setup Emscripten toolchain
      uses: mymindstorm/setup-emsdk@v11
      
    - run: mkdir build

    - name: Build Emscripten
      run: emcc Dilgine\Dilgine\Scripts\main.cpp Dilgine\Dilgine\Scripts\Core\System\System_Emscripten.cpp Dilgine\Dilgine\Scripts\Core\Serialization.cpp Dilgine\Dilgine\Scripts\Game\GameObject.cpp Dilgine\Dilgine\Scripts\Game\Components\CollisionColorChanger.cpp Dilgine\Dilgine\Scripts\Game\Components\PlayerController.cpp Dilgine\Dilgine\Scripts\Game\Components\RectangleCollider.cpp Dilgine\Dilgine\Scripts\Game\Components\RectangleRenderer.cpp Dilgine\Dilgine\Scripts\Game\Components\Transform.cpp Dilgine\Dilgine\Scripts\Core\World.cpp Dilgine\Dilgine\Scripts\Core\StackAllocator.cpp -sUSE_SDL=2 -sLLD_REPORT_UNDEFINED -IDilgine\Dilgine\Scripts\Core -IDilgine\Dilgine\Scripts\Core\System -IDilgine\Dilgine\Scripts\Game -IDilgine\Dilgine\Scripts\Game\Components -IDilgine\Dilgine\Scripts\Core\World -o .\build\index.html
      
    - uses: actions/upload-artifact@v3
      with:
        name: page
        path: build
        if-no-files-found: error

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: github-pages
      url: ${{steps.deployment.outputs.page_url}}
      
    steps:
    - uses: actions/checkout@v2
    - uses: actions/download-artifact@v3
      with:
        name: page
        path: build
    - uses: actions/configure-pages@v1
    - uses: actions/upload-pages-artifact@v1
      with:
        path: build
    - id: deployment
      uses: actions/deploy-pages@v1
      
      